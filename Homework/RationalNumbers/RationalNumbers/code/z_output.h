#ifndef Z_OUTPUT_H
#define Z_OUTPUT_H
/*
***** ALL RESULTS ARE VERIFIED ******
//---------------------------------------------------------------------
// normal run:
//---------------------------------------------------------------------
: a
: 1/2
: b
: 3/2
: a
: 5/4
------------ RESULTS --------------------
4/1 + 1/5 = 21/5
4/1 - 1/5 = 19/5
4/1 * 1/5 = 4/5
4/1 / 1/5 = 20/1
===================

[A] [B] E[x]it
Choice: a

A: 1/2

1/2 + 1/5 = 7/10
1/2 - 1/5 = 3/10
1/2 * 1/5 = 1/10
1/2 / 1/5 = 5/2
===================

[A] [B] E[x]it
Choice: b

B: 3/2

1/2 + 3/2 = 2/1
1/2 - 3/2 = -1/1
1/2 * 3/2 = 3/4
1/2 / 3/2 = 1/3
===================

[A] [B] E[x]it
Choice: a

A: 5/4

5/4 + 3/2 = 11/4
5/4 - 3/2 = -1/4
5/4 * 3/2 = 15/8
5/4 / 3/2 = 5/6
===================


//---------------------------------------------------------------------
// error:
//---------------------------------------------------------------------
: a
: 5/0
: b
: 0/0
------------ RESULTS --------------------
4/1 + 1/5 = 21/5
4/1 - 1/5 = 19/5
4/1 * 1/5 = 4/5
4/1 / 1/5 = 20/1
===================

[A] [B] E[x]it
Choice: a

A: 5/0

UNDEFINED + 1/5 = UNDEFINED
UNDEFINED - 1/5 = UNDEFINED
UNDEFINED * 1/5 = UNDEFINED
UNDEFINED / 1/5 = UNDEFINED
===================

[A] [B] E[x]it
Choice: b

B: 0/0

UNDEFINED + UNDEFINED = UNDEFINED
UNDEFINED - UNDEFINED = UNDEFINED
UNDEFINED * UNDEFINED = UNDEFINED
UNDEFINED / UNDEFINED = UNDEFINED
===================


//---------------------------------------------------------------------
// invalid input:
//---------------------------------------------------------------------
: c
: d
------------ RESULTS --------------------
4/1 + 1/5 = 21/5
4/1 - 1/5 = 19/5
4/1 * 1/5 = 4/5
4/1 / 1/5 = 20/1
===================

[A] [B] E[x]it
Choice: c

Error: Invalid input

4/1 + 1/5 = 21/5
4/1 - 1/5 = 19/5
4/1 * 1/5 = 4/5
4/1 / 1/5 = 20/1
===================

[A] [B] E[x]it
Choice: d

Error: Invalid input

4/1 + 1/5 = 21/5
4/1 - 1/5 = 19/5
4/1 * 1/5 = 4/5
4/1 / 1/5 = 20/1
===================


//---------------------------------------------------------------------
// zero case:
//---------------------------------------------------------------------
: a
: 0/5
: b
: 0/10
------------ RESULTS --------------------
4/1 + 1/5 = 21/5
4/1 - 1/5 = 19/5
4/1 * 1/5 = 4/5
4/1 / 1/5 = 20/1
===================

[A] [B] E[x]it
Choice: a

A: 0/5

0/5 + 1/5 = 1/5
0/5 - 1/5 = -1/5
0/5 * 1/5 = 0/1
0/5 / 1/5 = 0/1
===================

[A] [B] E[x]it
Choice: b

B: 0/10

0/5 + 0/10 = 0/1
0/5 - 0/10 = 0/1
0/5 * 0/10 = 0/1
0/5 / 0/10 = 0/1
===================


//---------------------------------------------------------------------
// whole number:
//---------------------------------------------------------------------
: a
: 5
: b
: 3
: a
: 0
------------ RESULTS --------------------
4/1 + 1/5 = 21/5
4/1 - 1/5 = 19/5
4/1 * 1/5 = 4/5
4/1 / 1/5 = 20/1
===================

[A] [B] E[x]it
Choice: a

A: 5

5/1 + 1/5 = 26/5
5/1 - 1/5 = 24/5
5/1 * 1/5 = 1/1
5/1 / 1/5 = 25/1
===================

[A] [B] E[x]it
Choice: b

B: 3

5/1 + 3/1 = 8/1
5/1 - 3/1 = 2/1
5/1 * 3/1 = 15/1
5/1 / 3/1 = 5/3
===================

[A] [B] E[x]it
Choice: a

A: 0

0/1 + 3/1 = 3/1
0/1 - 3/1 = -3/1
0/1 * 3/1 = 0/1
0/1 / 3/1 = 0/1
===================


//---------------------------------------------------------------------
// negative:
//---------------------------------------------------------------------
: a
: -5
: b
: -2/5
: a
: -0
------------ RESULTS --------------------
4/1 + 1/5 = 21/5
4/1 - 1/5 = 19/5
4/1 * 1/5 = 4/5
4/1 / 1/5 = 20/1
===================

[A] [B] E[x]it
Choice: a

A: -5

-5/1 + 1/5 = -24/5
-5/1 - 1/5 = -26/5
-5/1 * 1/5 = -1/1
-5/1 / 1/5 = -25/1
===================

[A] [B] E[x]it
Choice: b

B: -2/5

-5/1 + -2/5 = -27/5
-5/1 - -2/5 = -23/5
-5/1 * -2/5 = 2/1
-5/1 / -2/5 = -25/-2
===================

[A] [B] E[x]it
Choice: a

A: -0

0/1 + -2/5 = -2/5
0/1 - -2/5 = 2/5
0/1 * -2/5 = 0/1
0/1 / -2/5 = 0/1
===================


*/
#endif // Z_OUTPUT_H